#ifndef LIST_H#define LIST_H#include "jagged.h"/******************************************************************************/void list_get_4_values(const int * a, int * x0, int * x1, int * x2, int * x3);void list_set_4_values(int * a, int x0, int x1, int x2, int x3);/******************************************************************************/int list_position_count(int * arr, int n, int element);void list_position_members(int ** result_pointer, const int * arr,                           int n, int element, int total);/******************************************************************************/int list_member(const jagged1 * arr, int element);int list_position(const jagged1 * arr, int element);jagged1 * list_delete_duplicates(jagged1 * arr);/******************************************************************************/int list_sum(const int * a, int begin, int end);int list_product(const int * a, int begin, int end);/******************************************************************************/int list_signature(const jagged1 * arr);int list_complement_simplicial(const jagged1 * cell_nodes,                               const jagged1 * hyperface_nodes);void list_delete(jagged1 * result, const jagged1 * arr, int element);int list_relative_sign(const jagged1 * cell_nodes,                       const jagged1 * hyperface_nodes);#endif /* LIST_H */